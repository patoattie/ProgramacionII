/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parcialdoslii;

import java.awt.Component;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Sil y Pato
 */
public class frmRanking extends javax.swing.JFrame
{

    /**
     * Creates new form frmDiccionario
     */
    public frmRanking(Ranking ranking) {
        this.ranking = ranking;
        this.modeloTabla = new ModeloTablaRanking(0, 4);
        this.modeloFilas = new ModeloFilas(ModeloTablaRanking.getCOL_ESTADO());
        initComponents();
        this.inicializarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPuntuaciones = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ranking");

        tablaPuntuaciones.setAutoCreateRowSorter(true);
        tablaPuntuaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaPuntuaciones.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tablaPuntuaciones.getTableHeader().setReorderingAllowed(false);
        tablaPuntuaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPuntuacionesMouseClicked(evt);
            }
        });
        tablaPuntuaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tablaPuntuacionesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPuntuaciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tablaPuntuacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPuntuacionesMouseClicked
        this.refrescarDatos(false);
    }//GEN-LAST:event_tablaPuntuacionesMouseClicked

    private void tablaPuntuacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaPuntuacionesKeyReleased
        this.refrescarDatos(false);        
    }//GEN-LAST:event_tablaPuntuacionesKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPuntuaciones;
    // End of variables declaration//GEN-END:variables
    private Ranking ranking;
    private ModeloTablaRanking modeloTabla;
    private ModeloFilas modeloFilas;
    
    private void inicializarTabla()
    {
        this.tablaPuntuaciones.setModel(this.modeloTabla); //Asigno el modelo de la tabla
        this.tablaPuntuaciones.setDefaultRenderer(Object.class, this.modeloFilas); //Para poder manejar colores según el estado.
        this.tablaPuntuaciones.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); //Permito únicamente selección simple de filas.
        String titulo[] = ModeloTablaRanking.TITULOS_COLUMNAS;
        String fila[] = new String[this.tablaPuntuaciones.getColumnCount()];
        this.modeloTabla.setColumnIdentifiers(titulo);
        
        for (Puntuacion unaPuntuacion : this.ranking.getListaPuntuaciones())
        {
            fila[ModeloTablaRanking.getCOL_JUGADOR()] = unaPuntuacion.getJugador();
            fila[ModeloTablaRanking.getCOL_FECHA()] = unaPuntuacion.getFecha();
            fila[ModeloTablaRanking.getCOL_PUNTAJE()] = Integer.toString(unaPuntuacion.getPuntaje());
            fila[ModeloTablaRanking.getCOL_ESTADO()] = ModeloTabla.getSIN_CAMBIOS();
            this.modeloTabla.addRow(fila);
        }
        
        this.tablaPuntuaciones.getTableHeader().setResizingAllowed(true);

        this.tablaPuntuaciones.getRowSorter().toggleSortOrder(ModeloTablaRanking.getCOL_PUNTAJE()); //Ordeno por Puntaje en forma ascendente.
        this.tablaPuntuaciones.getRowSorter().toggleSortOrder(ModeloTablaRanking.getCOL_PUNTAJE()); //Ordeno por Puntaje en forma descendente.
        if(this.tablaPuntuaciones.getRowCount() > 0)
        {
            this.tablaPuntuaciones.setRowSelectionInterval(0, 0); //Selecciono inicialmente la primera fila.
        }
        
        this.refrescarDatos(true);
    }
    
    private void refrescarDatos(boolean redibujarTabla)
    {
        if(redibujarTabla)
        {
            this.adaptarAnchoColumnas();
            this.tablaPuntuaciones.repaint();
        }
    }
    
    private String getJugadorSeleccionado()
    {
        return this.modeloTabla.getJugador(ModeloTablaRanking.getFilaModelo(this.tablaPuntuaciones, this.tablaPuntuaciones.getSelectedRow()));
    }

    private int getPuntajeSeleccionado()
    {
        return this.modeloTabla.getPuntaje(ModeloTablaRanking.getFilaModelo(this.tablaPuntuaciones, this.tablaPuntuaciones.getSelectedRow()));
    }

    private String getFechaSeleccionada()
    {
        return this.modeloTabla.getFecha(ModeloTablaRanking.getFilaModelo(this.tablaPuntuaciones, this.tablaPuntuaciones.getSelectedRow()));
    }

    public ModeloTablaRanking getModeloTabla()
    {
        return modeloTabla;
    }
    
    private void adaptarAnchoColumnas()
    {
        for (int column = 0; column < this.tablaPuntuaciones.getColumnCount(); column++)
        {
            final TableColumnModel columnModel = this.tablaPuntuaciones.getColumnModel();
            int width = ModeloTablaRanking.getANCHO_MINIMO(); // Min width
            for (int row = 0; row < this.tablaPuntuaciones.getRowCount(); row++)
            {
                TableCellRenderer renderer = this.tablaPuntuaciones.getCellRenderer(row, column);
                Component comp = this.tablaPuntuaciones.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
            if(width > ModeloTablaRanking.getANCHO_MAXIMO())
            {
                width = ModeloTablaRanking.getANCHO_MAXIMO();
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }

        //Invisibilizo la columna Estado.
        this.tablaPuntuaciones.getColumnModel().getColumn(ModeloTablaRanking.getCOL_ESTADO()).setMinWidth(0);
        this.tablaPuntuaciones.getColumnModel().getColumn(ModeloTablaRanking.getCOL_ESTADO()).setPreferredWidth(0);
        this.tablaPuntuaciones.getColumnModel().getColumn(ModeloTablaRanking.getCOL_ESTADO()).setResizable(false);
    }
}
